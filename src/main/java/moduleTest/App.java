/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package moduleTest;

import ch.bildspur.artnet.ArtNetBuffer;
import ch.bildspur.artnet.ArtNetClient;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.Scanner;

public class App {


    public static int getEdisonAddress(int row, int col){
        int[][] edisonAddresses  = new int[4][512];

        int row0_col = 0;
        int row1_col = 0;
        int row2_col = 0;
        int row3_col = 0;
        int address = 0;
        int lights_in_this_section = 0;

        // West side lights
        lights_in_this_section = 9;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 8;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 8;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 7;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[3][row3_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        // Front Light section 1
        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address;
            address++;
        }

        // Front light section 2
        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address;
            address++;
        }

        // Front light section 3
        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address;
            address++;
        }

        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address;
            address++;
        }

        // Front light section 4
        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address;
            address++;
        }

        // Front light section 5
        lights_in_this_section = 3;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address;
            address++;
        }

        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address;
            address++;
        }

        // Front light section 6
        lights_in_this_section = 16+9;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 7+16+2;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 14+11;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        // Front light section 7
        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        // Front light section 8
        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 5;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        // Front light section 9
        lights_in_this_section = 4;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[0][row0_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[1][row1_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        lights_in_this_section = 6;
        for(int i = 0; i < lights_in_this_section; i++){
            edisonAddresses[2][row2_col++] = address+lights_in_this_section-1-i;
            address++;
        }

        // Right front section that was addressed weird...
        int offset0 = 11;
        edisonAddresses[0][row0_col+offset0-0] = 256;
        edisonAddresses[0][row0_col+offset0-1] = 257;
        edisonAddresses[0][row0_col+offset0-2] = 258;
        edisonAddresses[0][row0_col+offset0-3] = 260;
        edisonAddresses[0][row0_col+offset0-4] = 261;
        edisonAddresses[0][row0_col+offset0-5] = 263;
        edisonAddresses[0][row0_col+offset0-6] = 245;
        edisonAddresses[0][row0_col+offset0-7] = 244;
        edisonAddresses[0][row0_col+offset0-8] = 242;
        edisonAddresses[0][row0_col+offset0-9] = 243;
        edisonAddresses[0][row0_col+offset0-10] = 241;

        int offset1 = 10;
        edisonAddresses[1][row1_col+offset1-0] = 262;
        edisonAddresses[1][row1_col+offset1-1] = 259;
        edisonAddresses[1][row1_col+offset1-2] = 264;
        edisonAddresses[1][row1_col+offset1-3] = 268;
        edisonAddresses[1][row1_col+offset1-4] = 270;
        edisonAddresses[1][row1_col+offset1-5] = 246;
        edisonAddresses[1][row1_col+offset1-6] = 247;
        edisonAddresses[1][row1_col+offset1-7] = 248;
        edisonAddresses[1][row1_col+offset1-8] = 255;
        edisonAddresses[1][row1_col+offset1-9] = 252;

        int offset2 = 10;
        edisonAddresses[2][row2_col+offset2-0] = 267;
        edisonAddresses[2][row2_col+offset2-1] = 269;
        edisonAddresses[2][row2_col+offset2-2] = 271;
        edisonAddresses[2][row2_col+offset2-3] = 265;
        edisonAddresses[2][row2_col+offset2-4] = 266;
        edisonAddresses[2][row2_col+offset2-5] = 250;
        edisonAddresses[2][row2_col+offset2-6] = 251;
        edisonAddresses[2][row2_col+offset2-7] = 249;
        edisonAddresses[2][row2_col+offset2-8] = 254;
        edisonAddresses[2][row2_col+offset2-9] = 253;

        // Right section that was addressed weird...
        edisonAddresses[0][row0_col+offset0+1] = 288;
        edisonAddresses[0][row0_col+offset0+2] = 296;
        edisonAddresses[0][row0_col+offset0+3] = 297;
        edisonAddresses[0][row0_col+offset0+4] = 298;
        edisonAddresses[0][row0_col+offset0+5] = 299;
        edisonAddresses[0][row0_col+offset0+6] = 300;
        edisonAddresses[0][row0_col+offset0+7] = 301;
        edisonAddresses[0][row0_col+offset0+8] = 302;
        edisonAddresses[0][row0_col+offset0+9] = 303;

        edisonAddresses[1][row1_col+offset1+1] = 280;
        edisonAddresses[1][row1_col+offset1+2] = 289;
        edisonAddresses[1][row1_col+offset1+3] = 290;
        edisonAddresses[1][row1_col+offset1+4] = 291;
        edisonAddresses[1][row1_col+offset1+5] = 292;
        edisonAddresses[1][row1_col+offset1+6] = 293;
        edisonAddresses[1][row1_col+offset1+7] = 294;
        edisonAddresses[1][row1_col+offset1+8] = 295;

        edisonAddresses[2][row2_col+offset2+1] = 512;   // ????
        edisonAddresses[2][row2_col+offset2+2] = 281;
        edisonAddresses[2][row2_col+offset2+3] = 282;
        edisonAddresses[2][row2_col+offset2+4] = 283;
        edisonAddresses[2][row2_col+offset2+5] = 284;
        edisonAddresses[2][row2_col+offset2+6] = 285;
        edisonAddresses[2][row2_col+offset2+7] = 287;
        edisonAddresses[2][row2_col+offset2+8] = 286;

        edisonAddresses[3][row3_col+1] = 273;
        edisonAddresses[3][row3_col+2] = 274;
        edisonAddresses[3][row3_col+3] = 279;
        edisonAddresses[3][row3_col+4] = 275;
        edisonAddresses[3][row3_col+5] = 276;
        edisonAddresses[3][row3_col+6] = 277;
        edisonAddresses[3][row3_col+7] = 278;

        return edisonAddresses[row][col];
    }

    public static void main(String[] args) throws SocketException {
        System.out.println("Sending DMX data...");

        byte[] dmxData_univ_01 = new byte[512];

        Enumeration<NetworkInterface> netInterfaces = NetworkInterface.getNetworkInterfaces();
        ArrayList<NetworkInterface> netInterfaceList = new ArrayList<NetworkInterface>();
        int nInterfaces = 0;
        while (netInterfaces.hasMoreElements()) {
            netInterfaceList.add(netInterfaces.nextElement());
            System.out.println("(" + nInterfaces + ") = " + netInterfaceList.get(nInterfaces).getDisplayName());
            nInterfaces++;
        }

        int choice = 5;
        System.out.println("Selected " + netInterfaceList.get(choice).getDisplayName());

        NetworkInterface ni = netInterfaceList.get(choice);
        InetAddress address = ni.getInetAddresses().nextElement();

        ArtNetClient artnet = new ArtNetClient(new ArtNetBuffer(), 6454, 6454);
        artnet.start(address);

        // send data to localhost
        boolean onFlag = false;
        long startTime = System.nanoTime();
        long waitTime = 1000000000l;
        int col = 0;

        while(true){
            if(onFlag == false){
                dmxData_univ_01[getEdisonAddress(0, col)] = (byte) 255;
                dmxData_univ_01[getEdisonAddress(1, col)] = (byte) 255;
                dmxData_univ_01[getEdisonAddress(2, col)] = (byte) 255;
                dmxData_univ_01[getEdisonAddress(3, col)] = (byte) 255;
            }else{
                for (int j = 0; j < 512; j++){
                    dmxData_univ_01[j] = (byte) 0;
                }
            }

            if(startTime + waitTime < System.nanoTime()){
                startTime = System.nanoTime();
                if(onFlag){
                    onFlag = false;
                    System.out.println("Turning lights off. Col = " + col);
                    col = col + 1;
                }else{
                    onFlag = true;
                    System.out.println("Turning lights on.");
                }
            }

            String artnet_ip_addr = "192.168.1.2";
            artnet.unicastDmx(artnet_ip_addr, 0, 0, dmxData_univ_01);
        }
    }
}
